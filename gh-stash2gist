#!/usr/bin/env bash
set -e

GISTS_FILES=""

# Build unique stash description from sha1sum of stash content prefixed with "stash-<repo-name>-"
function build_stash_filename() {
    local stash_id="$1"

    local stash_sha1=$(git stash show -p "${stash_id}" | sha1sum | awk '{print $1}')
    local stash_filename="${STASH_PREFIX}-${stash_sha1}.diff"

    echo ${stash_filename}
}

# Check if stash has already been pushed to gist
function is_stash_pushed() {
    local stash_id="$1"
    local stash_filename=$(build_stash_filename ${stash_id})

    for gf in ${GISTS_FILES}; do
        if [ "${gf}" == "${stash_filename}" ]; then
            echo 1
            return
        fi
    done
    echo 0
}

function push_stashes() {
    local stashes=$(git stash list | cut -d':' -f 1)
    if [ -z "${stashes}" ]; then
        echo "No stash to push to gist."
        return 1
    fi
    set +e
    GISTS_FILES=$(gh api /users/${USERNAME}/gists | jq -M -r '.[] | select(.public==false) | .files | .[].filename' | grep ${STASH_PREFIX})
    set -e
    for s in ${stashes}; do
        ret=$(is_stash_pushed ${s})
        if [ "${ret}" == "0" ]; then
            echo "Push stash ${s} to gist"
            local stash_filename=$(build_stash_filename ${s})
            local gist_desc=$(git stash list | grep "${s}" | sed "s/${s}: //")
            git stash show -p ${s} | gh gist create -f "${stash_filename}" -d "${gist_desc}"
        fi
    done
}

# Check we are in a git respository
git status > /dev/null

REPO_NAME=$(basename $(git rev-parse --show-toplevel))
USERNAME=$(gh auth status 2>&1 | grep "Logged in to" | sed 's/.* as \([0-9a-zA-Z-]\+\) .*/\1/')
STASH_PREFIX="stash-${REPO_NAME}"

push_stashes

